{
    "name": "@flexn-io/create-monorepo",
    "private": true,
    "scripts": {
        "bootstrap": "(rnv unlink|| true) && npx lerna bootstrap && npx jetify && yarn build",
        "bootstrap-clean": "rm -rf ./node_modules; npx lerna clean --yes && yarn bootstrap",
        "build": "lerna run build",
        "watch-alt": "npx lerna run compile & npx lerna watch -- lerna run compile",
        "watch": "npx lerna exec yarn watch --parallel",
        "compile": "npx lerna run compile",
        "lint": "npx eslint ./packages",
        "test": "npx jest --coverage",
        "test-watch": "npx jest --watch",
        "sanity": "yarn compile && yarn lint && yarn test",
        "prettier-write-all": "npx prettier '**/*.{js,jsx,ts,tsx,mjs,cjs,json,md}' --write --config .prettierrc.js",
        "prettier-write-json": "npx prettier '**/{package.json,renative.plugins.json,renative.json}' --write --config .prettierrc.js",
        "lint:report": "eslint --output-file=eslint-report.json --format=json . --ext .js,.jsx,.ts,.tsx",
        "docs": "cd docs && yarn && yarn start",
        "docs-build": "cd docs && yarn && yarn build",
        "docs-deploy-preview": "cd docs && yarn && yarn build && yarn deploy-preview",
        "docs-deploy-prod": "cd docs && yarn && yarn build && yarn deploy-prod",
        "gitCommit": "npx rnv hooks run -x gitCommit --only",
        "gitTag": "npx rnv hooks run -x gitTag --only",
        "update-versions": "npx rnv hooks run -x updateVersions --only",
        "release": "lerna version --force-publish --no-git-tag-version --no-push && yarn update-versions && yarn gitCommit && lerna publish from-package && yarn gitTag",
        "release-alpha": "lerna version --force-publish --no-git-tag-version --no-push && yarn update-versions && yarn gitCommit && lerna publish from-package --dist-tag alpha --yes && yarn gitTag",
        "release-rc": "lerna version --force-publish --no-git-tag-version --no-push && yarn update-versions && yarn gitCommit && lerna publish from-package --dist-tag rc --yes && yarn gitTag",
        "release-feat": "lerna version --force-publish --no-git-tag-version --no-push && yarn update-versions && yarn gitCommit && lerna publish from-package --dist-tag feat --yes && yarn gitTag",
        "release-dry": "lerna version --force-publish --no-git-tag-version --no-push && npx rnv hooks run -x updateVersions",
        "deploy-packages": "npm run deploy-all && npx lerna publish from-package --yes && git push origin HEAD",
        "decrypt-harness": "cd packages/app-harness && npx rnv crypto decrypt --ci",
        "decrypt-template": "cd packages/template-starter && npx rnv crypto decrypt -c template --ci",
        "deploy-harness-macos": "cd packages/app-harness && npx rnv export -p macos -s production --packageManager yarn --ci && yarn deploy:macos-prod",
        "deploy-harness-macos-canary": "cd packages/app-harness && npx rnv export -p macos -s canary --packageManager yarn --ci && yarn deploy:macos-canary",
        "deploy-harness-ios": "cd packages/app-harness && npx rnv export -p ios -s production --packageManager yarn --ci && yarn deploy:ios-prod",
        "deploy-harness-ios-canary": "cd packages/app-harness && npx rnv export -p ios -s canary --packageManager yarn --ci && yarn deploy:ios-canary",
        "deploy-harness-android": "cd packages/app-harness && npx rnv build -p android -s production --packageManager yarn --ci && yarn deploy:android-prod",
        "deploy-harness-android-canary": "cd packages/app-harness && npx rnv build -p android -s canary --packageManager yarn --ci && yarn deploy:android-canary",
        "deploy-harness-tvos": "cd packages/app-harness && npx rnv export -p tvos -s production --packageManager yarn --xcodebuildArchiveArgs \"-UseModernBuildSystem=NO\" --ci && yarn deploy:tvos-prod",
        "deploy-harness-tvos-canary": "cd packages/app-harness && npx rnv export -p tvos -s canary --packageManager yarn --xcodebuildArchiveArgs \"-UseModernBuildSystem=NO\" --ci && yarn deploy:tvos-canary",
        "deploy-harness-androidtv": "cd packages/app-harness && npx rnv build -p androidtv -s production --packageManager yarn --ci && yarn deploy:androidtv-prod",
        "deploy-harness-androidtv-canary": "cd packages/app-harness && npx rnv build -p androidtv -s canary --packageManager yarn --ci && yarn deploy:androidtv-canary",
        "deploy-harness-firetv": "cd packages/app-harness && npx rnv build -p firetv -s production --packageManager yarn --ci && yarn deploy:firetv-prod",
        "deploy-harness-firetv-canary": "cd packages/app-harness && npx rnv build -p firetv -s canary --packageManager yarn --ci && yarn deploy:firetv-canary",
        "deploy-harness-web": "cd packages/app-harness && npx rnv export -p web -s production --packageManager yarn --ci && yarn deploy:web-prod",
        "deploy-harness-web-canary": "cd packages/app-harness && npx rnv export -p web -s canary --packageManager yarn --ci && yarn deploy:web-canary",
        "deploy-harness-chromecast": "cd packages/app-harness && npx rnv build -p chromecast -s production --packageManager yarn --ci && yarn deploy:chromecast-prod",
        "deploy-harness-chromecast-canary": "cd packages/app-harness && npx rnv build -p chromecast -s canary --packageManager yarn --ci && yarn deploy:chromecast-canary",
        "deploy-template-macos": "cd packages/template-starter && npx rnv export -p macos -s production -c template --packageManager yarn --ci && yarn deploy:macos-prod",
        "deploy-template-macos-canary": "cd packages/template-starter && npx rnv export -p macos -s canary -c template --packageManager yarn --ci && yarn deploy:macos-canary",
        "deploy-template-ios": "cd packages/template-starter && npx rnv export -p ios -s production -c template --packageManager yarn --ci && yarn deploy:ios-prod",
        "deploy-template-ios-canary": "cd packages/template-starter && npx rnv export -p ios -s canary -c template --packageManager yarn --ci && yarn deploy:ios-canary",
        "deploy-template-android": "cd packages/template-starter && npx rnv build -p android -s production -c template --packageManager yarn --ci && yarn deploy:android-prod",
        "deploy-template-android-canary": "cd packages/template-starter && npx rnv build -p android -s canary -c template --packageManager yarn --ci && yarn deploy:android-canary",
        "deploy-template-tvos": "cd packages/template-starter && npx rnv export -p tvos -s production -c template --packageManager yarn --xcodebuildArchiveArgs \"-UseModernBuildSystem=NO\" --ci && yarn deploy:tvos-prod",
        "deploy-template-tvos-canary": "cd packages/template-starter && npx rnv export -p tvos -s canary -c template --packageManager yarn --xcodebuildArchiveArgs \"-UseModernBuildSystem=NO\" --ci && yarn deploy:tvos-canary",
        "deploy-template-androidtv": "cd packages/template-starter && npx rnv build -p androidtv -s production -c template --packageManager yarn --ci && yarn deploy:androidtv-prod",
        "deploy-template-androidtv-canary": "cd packages/template-starter && npx rnv build -p androidtv -s canary -c template --packageManager yarn --ci && yarn deploy:androidtv-canary",
        "deploy-template-firetv": "cd packages/template-starter && npx rnv build -p firetv -s production -c template --packageManager yarn --ci && yarn deploy:firetv-prod",
        "deploy-template-firetv-canary": "cd packages/template-starter && npx rnv build -p firetv -s canary -c template --packageManager yarn --ci && yarn deploy:firetv-canary",
        "deploy-template-web": "cd packages/template-starter && npx rnv export -p web -s production -c template --packageManager yarn --ci && yarn deploy:web-prod",
        "deploy-template-web-canary": "cd packages/template-starter && npx rnv export -p web -s canary -c template --packageManager yarn --ci && yarn deploy:web-canary",
        "e2e-harness-ios": "cd packages/app-harness && npx rnv build -p ios -s test --packageManager yarn --ci && yarn e2e:ios",
        "e2e-harness-android": "cd packages/app-harness && npx rnv build -p android -s test --packageManager yarn --ci && yarn e2e:android",
        "e2e-harness-tvos": "cd packages/app-harness && npx rnv build -p tvos -s test --packageManager yarn --ci && yarn e2e:tvos",
        "e2e-harness-androidtv": "cd packages/app-harness && npx rnv build -p androidtv -s test --packageManager yarn --ci && yarn e2e:androidtv",
        "e2e-harness-macos": "cd packages/app-harness && npx rnv build -p macos -s test --packageManager yarn --ci && yarn e2e:macos",
        "e2e-harness-web": "cd packages/app-harness && npx rnv start -p web -s test --packageManager yarn --ci & sleep 60 && cd packages/app-harness && yarn e2e:web && kill $(lsof -t -i:8080)",
        "e2e-template-ios": "cd packages/template-starter && npx rnv build -p ios -s test -c template --packageManager yarn --ci && yarn e2e:ios",
        "e2e-template-android": "cd packages/template-starter && npx rnv build -p android -s test -c template --packageManager yarn --ci && yarn e2e:android",
        "e2e-template-tvos": "cd packages/template-starter && npx rnv build -p tvos -s test -c template --packageManager yarn --ci && yarn e2e:tvos",
        "e2e-template-androidtv": "cd packages/template-starter && npx rnv build -p androidtv -s test -c template --packageManager yarn --ci && yarn e2e:androidtv",
        "e2e-template-macos": "cd packages/template-starter && npx rnv build -p macos -s test -c template --packageManager yarn --ci && yarn e2e:macos",
        "e2e-template-web": "cd packages/template-starter && npx rnv start -p web -s test -c template --packageManager yarn --ci & sleep 60 && cd packages/template-starter && yarn e2e:web && kill $(lsof -t -i:8080)",
        "prepare-harness-nightly": "cd packages/app-harness && npx rnv hooks run -x prepareNightlyBuild --only",
        "prepare-template-nightly": "cd packages/template-starter && npx rnv hooks run -x prepareNightlyBuild -c template --only",
        "clean-harness-post-nightly": "cd packages/app-harness && npx rnv hooks run -x cleanupPostNightly --only",
        "clean-template-post-nightly": "cd packages/template-starter && npx rnv hooks run -x cleanupPostNightly -c template --only"
    },
    "devDependencies": {
        "@flexn/eslint-config": "0.1.7",
        "@flexn/prettier-config": "0.1.7",
        "@flexn/typescript-config": "1.0.0",
        "@flexn/build-hooks": "0.30.0",
        "@types/jest": "~27.0.2",
        "@types/lodash-es": "~4.17.5",
        "@types/lodash.debounce": "~4.0.6",
        "@types/lodash.throttle": "~4.1.7",
        "@types/node": "~16.11.7",
        "@types/react-dom": "~18.2.4",
        "@types/react-native": "~0.67.2",
        "@types/chromecast-caf-receiver": "~6.0.6",
        "@types/react-native-snap-carousel": "~3.8.5",
        "@types/react-native-vector-icons": "6.4.13",
        "eslint-config-prettier": "8.8.0",
        "husky": "4.2.5",
        "jest": "27.3.1",
        "lerna": "6.6.2",
        "rnv": "0.37.2-rc.1",
        "typescript": "4.9.5",
        "prettier": "2.3.1",
        "eslint": "8.40.0"
    },
    "husky": {
        "hooks": {
            "pre-commit": "yarn sanity"
        }
    },
    "lint-staged": {
        "*.js": [
            "eslint"
        ],
        "**/*.ts": "tsc-files --noEmit"
    },
    "workspaces": {
        "packages": [
            "packages/*"
        ]
    },
    "resolutions": {
        "@types/react": "18.2.6",
        "tslib": "2.5.2"
    }
}
