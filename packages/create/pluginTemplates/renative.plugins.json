{
    "pluginTemplates": {
        "@flexn/create": {
            "androidtv": {
                "activityImports": ["io.flexn.create.TvRemoteHandlerModule", "android.view.KeyEvent;"],
                "activityMethods": [
                    "override fun onKeyUp(keyCode: Int, event: KeyEvent?): Boolean {",
                    "TvRemoteHandlerModule.getInstance().onKeyEvent(event, \"up\");",
                    "return super.onKeyUp(keyCode, event)",
                    "}",
                    "override fun onKeyLongPress(keyCode: Int, event: KeyEvent?): Boolean {",
                    "   TvRemoteHandlerModule.getInstance().onKeyEvent(event,  \"longPress\");",
                    "    return super.onKeyLongPress(keyCode, event)",
                    "}",
                    "override fun onKeyDown(keyCode: Int, event: KeyEvent?): Boolean {",
                    "if(keyCode == KeyEvent.KEYCODE_DPAD_RIGHT || keyCode == KeyEvent.KEYCODE_DPAD_LEFT || keyCode == KeyEvent.KEYCODE_DPAD_UP || keyCode == KeyEvent.KEYCODE_DPAD_DOWN) {",
                    "event?.startTracking();",
                    "TvRemoteHandlerModule.getInstance().onKeyEvent(event,\"down\");",
                    "return true;",
                    "}",
                    "TvRemoteHandlerModule.getInstance().onKeyEvent(event, \"down\");",
                    "return super.onKeyDown(keyCode, event)",
                    "}"
                ],
                "package": "io.flexn.create.FlexnCreatePackage",
                "projectName": "flexn-io-create"
            },
            "firetv": {
                "activityImports": ["io.flexn.create.TvRemoteHandlerModule", "android.view.KeyEvent;"],
                "activityMethods": [
                    "override fun onKeyUp(keyCode: Int, event: KeyEvent?): Boolean {",
                    "TvRemoteHandlerModule.getInstance().onKeyEvent(event, \"up\");",
                    "return super.onKeyUp(keyCode, event)",
                    "}",
                    "override fun onKeyLongPress(keyCode: Int, event: KeyEvent?): Boolean {",
                    "   TvRemoteHandlerModule.getInstance().onKeyEvent(event,  \"longPress\");",
                    "    return super.onKeyLongPress(keyCode, event)",
                    "}",
                    "override fun onKeyDown(keyCode: Int, event: KeyEvent?): Boolean {",
                    "if(keyCode == KeyEvent.KEYCODE_DPAD_RIGHT || keyCode == KeyEvent.KEYCODE_DPAD_LEFT || keyCode == KeyEvent.KEYCODE_DPAD_UP || keyCode == KeyEvent.KEYCODE_DPAD_DOWN) {",
                    "event?.startTracking();",
                    "TvRemoteHandlerModule.getInstance().onKeyEvent(event,\"down\");",
                    "return true;",
                    "}",
                    "TvRemoteHandlerModule.getInstance().onKeyEvent(event, \"down\");",
                    "return super.onKeyDown(keyCode, event)",
                    "}"
                ],
                "package": "io.flexn.create.FlexnCreatePackage",
                "projectName": "flexn-io-create"
            },
            "tvos": {
                "podName": "FlexnCreate"
            },
            "version": "0.21.0-alpha.0",
            "webpack": {
                "moduleAliases": true,
                "modulePaths": true
            }
        },
        "@flexn/sdk": {
            "androidtv": {
                "package": "io.flexn.sdk.FlexnSdkPackage",
                "projectName": "flexn-io-sdk"
            },
            "firetv": {
                "package": "io.flexn.sdk.FlexnSdkPackage",
                "projectName": "flexn-io-sdk"
            },
            "tvos": {
                "podName": "FlexnSDK"
            },
            "version": "0.20.0-alpha.25",
            "webpack": {
                "moduleAliases": true,
                "modulePaths": true
            }
        },
        "@flexn/typescript": {
            "version": "0.1.4"
        },
        "@lightningjs/cli": "source:rnv",
        "@lightningjs/sdk": "source:rnv",
        "@react-native-async-storage/async-storage": {
            "android": {
                "package": "com.reactnativecommunity.asyncstorage.AsyncStoragePackage",
                "projectName": "react-native-community-async-storage"
            },
            "androidtv": {
                "package": "com.reactnativecommunity.asyncstorage.AsyncStoragePackage",
                "projectName": "react-native-community-async-storage"
            },
            "firetv": {
                "package": "com.reactnativecommunity.asyncstorage.AsyncStoragePackage",
                "projectName": "react-native-community-async-storage"
            },
            "ios": {
                "podName": "RNCAsyncStorage"
            },
            "macos": {
                "podName": "RNCAsyncStorage"
            },
            "tvos": {
                "podName": "RNCAsyncStorage"
            },
            "version": "1.15.9",
            "webpack": {
                "modulePaths": true
            }
        },
        "@react-native-clipboard/clipboard": {
            "android": {
                "package": "com.reactnativecommunity.clipboard.ClipboardPackage",
                "path": "node_modules/@react-native-clipboard/clipboard/android"
            },
            "ios": {
                "podName": "RNCClipboard"
            },
            "macos": {
                "podName": "RNCClipboard"
            },
            "version": "1.9.0"
        },
        "@react-native-community/checkbox": {
            "android": {
                "package": "com.reactnativecommunity.checkbox.ReactCheckBoxPackage"
            },
            "androidtv": {
                "package": "com.reactnativecommunity.checkbox.ReactCheckBoxPackage"
            },
            "firetv": {
                "package": "com.reactnativecommunity.checkbox.ReactCheckBoxPackage"
            },
            "ios": {
                "podName": "RNCCheckbox"
            },
            "macos": {
                "podName": "RNCCheckbox"
            },
            "tvos": {
                "podName": "RNCCheckbox"
            },
            "version": "0.5.9"
        },
        "@react-native-community/cli": "source:rnv",
        "@react-native-community/masked-view": "source:rnv",
        "@react-native-community/netinfo": {
            "source": "rnv"
        },
        "@react-native-picker/picker": {
            "android": {
                "package": "com.reactnativecommunity.picker.RNCPickerPackage"
            },
            "androidtv": {
                "package": "com.reactnativecommunity.picker.RNCPickerPackage"
            },
            "firetv": {
                "package": "com.reactnativecommunity.picker.RNCPickerPackage"
            },
            "ios": {
                "podName": "RNCPicker"
            },
            "macos": {
                "podName": "RNCPicker"
            },
            "tvos": {
                "podName": "RNCPicker"
            },
            "version": "2.1.0"
        },
        "@react-navigation": {
            "npm": {
                "@react-navigation/bottom-tabs": "5.1.1",
                "@react-navigation/core": "5.12.3",
                "@react-navigation/drawer": "5.11.4",
                "@react-navigation/material-bottom-tabs": "5.2.12",
                "@react-navigation/material-top-tabs": "5.3.10",
                "@react-navigation/native": "5.7.3",
                "@react-navigation/native-stack": "5.0.5",
                "@react-navigation/routers": "5.1.0",
                "@react-navigation/stack": "5.9.2",
                "@react-navigation/web": "1.0.0-alpha.9",
                "react-native-safe-area-context": "3.1.8"
            }
        },
        "@rnv/renative": {
            "webpack": {
                "moduleAliases": true,
                "modulePaths": true
            }
        },
        "@sentry/react": {
            "version": "6.13.3"
        },
        "@sentry/react-native": {
            "android": {
                "app/build.gradle": {
                    "apply": ["from: \"{{PLUGIN_ROOT}}/sentry.gradle\""]
                },
                "implementation": "implementation project(':@sentry_react-native')",
                "package": "io.sentry.react.RNSentryPackage",
                "path": "node_modules/@sentry/react-native/android",
                "projectName": "@sentry_react-native"
            },
            "androidtv": {
                "app/build.gradle": {
                    "apply": ["from: \"{{PLUGIN_ROOT}}/sentry.gradle\""]
                },
                "implementation": "implementation project(':@sentry_react-native')",
                "package": "io.sentry.react.RNSentryPackage",
                "path": "node_modules/@sentry/react-native/android",
                "projectName": "@sentry_react-native"
            },
            "androidwear": {
                "app/build.gradle": {
                    "apply": ["from: \"{{PLUGIN_ROOT}}/sentry.gradle\""]
                },
                "implementation": "implementation project(':@sentry_react-native')",
                "package": "io.sentry.react.RNSentryPackage",
                "path": "node_modules/@sentry/react-native/android",
                "projectName": "@sentry_react-native"
            },
            "firetv": {
                "app/build.gradle": {
                    "apply": ["from: \"{{PLUGIN_ROOT}}/sentry.gradle\""]
                },
                "implementation": "implementation project(':@sentry_react-native')",
                "package": "io.sentry.react.RNSentryPackage",
                "path": "node_modules/@sentry/react-native/android",
                "projectName": "@sentry_react-native"
            },
            "ios": {
                "podName": "RNSentry",
                "xcodeproj": {
                    "buildPhases": [
                        {
                            "shellPath": "/bin/sh",
                            "shellScript": "export NODE_BINARY=node\nexport SENTRY_PROPERTIES=../sentry.properties"
                        }
                    ]
                }
            },
            "macos": {
                "podName": "RNSentry"
            },
            "tvos": {
                "podName": "RNSentry",
                "xcodeproj": {
                    "buildPhases": [
                        {
                            "shellPath": "/bin/sh",
                            "shellScript": "export NODE_BINARY=node\nexport SENTRY_PROPERTIES=../sentry.properties"
                        }
                    ]
                }
            },
            "version": "3.1.1"
        },
        "@sentry/tracing": {
            "version": "6.13.3"
        },
        "@shopify/flash-list": {
            "android": {
                "package": "com.shopify.reactnative.flash_list.ReactNativeFlashListPackage"
            },
            "androidtv": {
                "package": "com.shopify.reactnative.flash_list.ReactNativeFlashListPackage"
            },
            "firetv": {
                "package": "com.shopify.reactnative.flash_list.ReactNativeFlashListPackage"
            },
            "ios": {
                "podName": "RNFlashList"
            },
            "tvos": {
                "podName": "RNFlashList"
            },
            "version": "1.4.1"
        },
        "aws-amplify": "4.3.13",
        "axios": "0.24.0",
        "deepmerge": "4.2.2",
        "detox": {
            "BuildGradle": {
                "allprojects": {
                    "repositories": {
                        " maven { url \"{{resolvePackage(detox)}}/Detox-android\" }": true
                    }
                }
            },
            "android": {
                "defaultConfig": [
                    "testBuildType System.getProperty('testBuildType', 'debug')",
                    "testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'"
                ]
            },
            "version": "16.3.0"
        },
        "next": {
            "version": "12.0.9"
        },
        "next-seo": "4.28.1",
        "react": "source:rnv",
        "react-native": "source:rnv",
        "react-native-carplay": {
            "ios": {
                "appDelegateExtensions": ["CPApplicationDelegate"],
                "appDelegateImports": ["CarPlay", "react_native_carplay"],
                "appDelegateMethods": {
                    "application": {
                        "didConnectCarInterfaceController": [
                            "RNCarPlay.connect(with: interfaceController, window: window)"
                        ],
                        "didDisconnectCarInterfaceController": ["RNCarPlay.disconnect()"]
                    }
                },
                "path": "node_modules/react-native-carplay",
                "podName": "react-native-carplay"
            },
            "version": "2.0.0"
        },
        "react-native-device-info": {
            "source": "rnv",
            "version": "8.3.3"
        },
        "react-native-document-picker": {
            "android": {
                "package": "com.reactnativedocumentpicker.DocumentPickerPackage"
            },
            "ios": {
                "podName": "react-native-document-picker"
            },
            "macos": {
                "podName": "react-native-document-picker"
            },
            "version": "7.1.1"
        },
        "react-native-fast-image": "source:rnv",
        "react-native-fs": {
            "android": {
                "package": "com.rnfs.RNFSPackage"
            },
            "androidtv": {
                "package": "com.rnfs.RNFSPackage"
            },
            "firetv": {
                "package": "com.rnfs.RNFSPackage"
            },
            "ios": {
                "podName": "RNFS"
            },
            "tvos": {
                "podName": "RNFS"
            },
            "version": "2.18.0"
        },
        "react-native-gesture-handler": {
            "source": "rnv",
            "version": "1.10.3"
        },
        "react-native-google-cast": {
            "android": {
                "AndroidManifest": {
                    "children": [
                        {
                            "android:name": ".MainApplication",
                            "children": [
                                {
                                    "android:name": "com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME",
                                    "android:value": "{{configProps.id}}.CastOptionsProvider",
                                    "tag": "meta-data"
                                },
                                {
                                    "android:name": "com.reactnative.googlecast.RECEIVER_APPLICATION_ID",
                                    "android:value": "{{props.applicationID}}",
                                    "tag": "meta-data"
                                },
                                {
                                    "android:name": "com.reactnative.googlecast.RNGCExpandedControllerActivity",
                                    "tag": "activity"
                                }
                            ],
                            "tag": "application"
                        }
                    ]
                },
                "MainApplication": {
                    "packages": ["com.reactnative.googlecast.GoogleCastPackage"]
                },
                "app/build.gradle": {
                    "configurations": {
                        "all*.exclude group: 'com.google.guava', module: 'listenablefuture'": true
                    }
                },
                "implementations": [
                    "'com.google.android.gms:play-services-cast-framework:20.0.0'",
                    "'com.google.guava:guava:28.0-android'"
                ],
                "mainActivity": {
                    "createMethods": ["CastContext.getSharedInstance(this)"],
                    "imports": ["com.google.android.gms.cast.framework.CastContext"]
                }
            },
            "ios": {
                "appDelegateImports": ["GoogleCast"],
                "appDelegateMethods": {
                    "application": {
                        "didFinishLaunchingWithOptions": [
                            "let receiverAppID = \"{{props.applicationID}}\"",
                            "let criteria = GCKDiscoveryCriteria(applicationID: receiverAppID)",
                            "let options = GCKCastOptions(discoveryCriteria: criteria)",
                            "options.physicalVolumeButtonsWillControlDeviceVolume = true;",
                            "options.disableDiscoveryAutostart = false;",
                            "options.startDiscoveryAfterFirstTapOnCastButton = true;",
                            "GCKCastContext.setSharedInstanceWith(options)",
                            "GCKCastContext.sharedInstance().useDefaultExpandedMediaControls = true;"
                        ]
                    }
                },
                "isStatic": true,
                "path": "node_modules/react-native-google-cast/ios",
                "plist": {
                    "NSBluetoothAlwaysUsageDescription": "${PRODUCT_NAME} uses Bluetooth to discover nearby Cast devices.",
                    "NSBluetoothPeripheralUsageDescription": "${PRODUCT_NAME} uses Bluetooth to discover nearby Cast devices.",
                    "NSBonjourServices": ["_googlecast._tcp", "_{{props.applicationID}}._googlecast._tcp"],
                    "NSLocalNetworkUsageDescription": "${PRODUCT_NAME} uses the local network to discover Cast-enabled devices on your WiFi network.",
                    "NSMicrophoneUsageDescription": "${PRODUCT_NAME} uses microphone access to listen for ultrasonic tokens when pairing with nearby Cast devices."
                },
                "podName": "react-native-google-cast"
            },
            "props": {
                "applicationID": "6F07F3DC"
            },
            "version": "4.1.2"
        },
        "react-native-home-indicator": {
            "ios": {
                "appDelegateImports": ["react_native_home_indicator"],
                "appDelegateMethods": {
                    "application": {
                        "didFinishLaunchingWithOptions": [
                            "vc.view = nil",
                            "let vc2 = HomeIndicatorViewController()",
                            "vc2.view = v",
                            "self.window?.rootViewController = vc2"
                        ]
                    }
                },
                "podName": "react-native-home-indicator"
            },
            "version": "0.2.6"
        },
        "react-native-keep-awake": "source:rnv",
        "react-native-linear-gradient": "source:rnv",
        "react-native-media-query": {
            "version": "2.0.0"
        },
        "react-native-orientation-locker": "source:rnv",
        "react-native-paper": {
            "version": "4.11.2"
        },
        "react-native-reanimated": {
            "android": {
                "package": "com.swmansion.reanimated.ReanimatedPackage"
            },
            "androidtv": {
                "package": "com.swmansion.reanimated.ReanimatedPackage"
            },
            "androidwear": {
                "package": "com.swmansion.reanimated.ReanimatedPackage"
            },
            "firetv": {
                "package": "com.swmansion.reanimated.ReanimatedPackage"
            },
            "ios": {
                "podName": "RNReanimated"
            },
            "tvos": {
                "podName": "RNReanimated"
            },
            "version": "1.13.3",
            "webpack": {
                "moduleAliases": true,
                "modulePaths": true
            }
        },
        "react-native-safe-area-context": {
            "android": {
                "package": "com.th3rdwave.safeareacontext.SafeAreaContextPackage"
            },
            "androidtv": {
                "package": "com.th3rdwave.safeareacontext.SafeAreaContextPackage"
            },
            "androidwear": {
                "package": "com.th3rdwave.safeareacontext.SafeAreaContextPackage"
            },
            "firetv": {
                "package": "com.th3rdwave.safeareacontext.SafeAreaContextPackage"
            },
            "ios": {
                "podName": "react-native-safe-area-context"
            },
            "tvos": {
                "podName": "react-native-safe-area-context"
            },
            "version": "3.1.8"
        },
        "react-native-screens": {
            "android": {
                "package": "com.swmansion.rnscreens.RNScreensPackage"
            },
            "androidtv": {
                "package": "com.swmansion.rnscreens.RNScreensPackage"
            },
            "firetv": {
                "package": "com.swmansion.rnscreens.RNScreensPackage"
            },
            "ios": {
                "isStatic": true,
                "podName": "RNScreens"
            },
            "macos": {
                "podName": "RNScreens"
            },
            "tvos": {
                "isStatic": true,
                "podName": "RNScreens"
            },
            "version": "2.2.0"
        },
        "react-native-swiper": {
            "version": "github:reactseals/react-native-swiper#2.0.1"
        },
        "react-native-tvos-controller": {
            "ios": {
                "podName": "RNTVOSController"
            },
            "tvos": {
                "podName": "RNTVOSController"
            },
            "version": "0.2.4"
        },
        "react-native-vector-icons": {
            "source": "rnv",
            "version": "8.1.0"
        },
        "react-native-video": {
            "android": {
                "package": "com.brentvatne.react.ReactVideoPackage",
                "path": "node_modules/react-native-video/android-exoplayer"
            },
            "androidtv": {
                "package": "com.brentvatne.react.ReactVideoPackage",
                "path": "node_modules/react-native-video/android-exoplayer"
            },
            "firetv": {
                "package": "com.brentvatne.react.ReactVideoPackage",
                "path": "node_modules/react-native-video/android-exoplayer"
            },
            "ios": {
                "podName": "react-native-video"
            },
            "tvos": {
                "podName": "react-native-video"
            },
            "version": "5.1.1"
        },
        "react-native-web": "source:rnv",
        "react-outside-click-handler": "1.3.0",
        "renative": {
            "webpack": {
                "moduleAliases": true,
                "modulePaths": true
            }
        },
        "styled-jsx": "5.0.0",
        "theoplayer": "3.0.0",
        "tslib": "2.3.1"
    }
}
